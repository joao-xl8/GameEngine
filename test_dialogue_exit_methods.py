#!/usr/bin/env python3

import os

def check_dialogue_system():
    """Check if dialogue system is properly set up"""
    level_file = "metadata/levels/level1.txt"
    dialogue_file = "metadata/dialogues/npcs/actor_idle/enhanced_greeting.txt"
    
    level_exists = os.path.exists(level_file)
    dialogue_exists = os.path.exists(dialogue_file)
    
    print(f"Level file: {'‚úÖ' if level_exists else '‚ùå'} {level_file}")
    print(f"Dialogue file: {'‚úÖ' if dialogue_exists else '‚ùå'} {dialogue_file}")
    
    if level_exists:
        with open(level_file, 'r') as f:
            content = f.read()
        has_npc = "NPC Actor_idle" in content
        has_spawn = "PlayerSpawn" in content
        print(f"NPC in level: {'‚úÖ' if has_npc else '‚ùå'} Actor_idle")
        print(f"PlayerSpawn in level: {'‚úÖ' if has_spawn else '‚ùå'} PlayerSpawn tile")
    
    return level_exists and dialogue_exists

if __name__ == "__main__":
    print("=== Dialogue Exit Methods Test ===")
    
    print("1. Checking dialogue system setup...")
    system_ready = check_dialogue_system()
    
    if not system_ready:
        print("‚ùå System not ready for testing")
        exit(1)
    
    print("\n‚úÖ System ready for testing!")
    
    print("\n=== Test Scenarios ===")
    print("We need to test BOTH ways of exiting dialogue:")
    print("1. üìñ NORMAL COMPLETION: Go through entire dialogue")
    print("2. üö™ ESC EXIT: Press ESC to exit dialogue early")
    print("Both should preserve player position!")
    
    print("\n=== Test Procedure ===")
    print("üéÆ Run the game: ./build/release/GameEngine")
    print("üéØ Start new game or load save")
    print("üö∂ Move player to MEMORABLE position (e.g., far right corner)")
    print("üìç Remember exact position (e.g., 'near the right wall')")
    
    print("\n--- Test 1: Normal Completion ---")
    print("1. üó£Ô∏è Find NPC (Actor_idle) and press E")
    print("2. üìñ Go through ENTIRE dialogue (press SPACE repeatedly)")
    print("3. ‚úÖ Dialogue ends naturally")
    print("4. üìç Check: Player should be at SAME position")
    print("5. üéâ SUCCESS: Position preserved through normal completion")
    
    print("\n--- Test 2: ESC Exit ---")
    print("1. üö∂ Move player to DIFFERENT memorable position")
    print("2. üó£Ô∏è Find NPC (Actor_idle) and press E")
    print("3. üö™ Press ESC immediately (don't complete dialogue)")
    print("4. ‚úÖ Dialogue exits early")
    print("5. üìç Check: Player should be at SAME position")
    print("6. üéâ SUCCESS: Position preserved through ESC exit")
    
    print("\n=== Expected Debug Output ===")
    print("üîç For BOTH test scenarios, you should see:")
    print("Starting dialogue with NPC: Actor_idle")
    print("Preserving game state:")
    print("  Level: metadata/levels/level1.txt")
    print("  Player Position: (your position)")
    print("  Health: 100")
    print("DEBUG: Scene_Dialogue constructor with preserved state called")
    print("Preserved state - Level: metadata/levels/level1.txt, Position: (X, Y)")
    
    print("\n--- Normal Completion Output ---")
    print("Dialogue complete!")
    print("Returning to play scene with preserved state:")
    print("  Position: (same as before)")
    print("Using custom spawn position from save: X.0, Y.0")
    
    print("\n--- ESC Exit Output ---")
    print("User pressed ESC during dialogue - completing dialogue normally to preserve state")
    print("Returning to play scene with preserved state:")
    print("  Position: (same as before)")
    print("Using custom spawn position from save: X.0, Y.0")
    
    print("\n=== Success Criteria ===")
    print("‚úÖ Normal completion preserves position")
    print("‚úÖ ESC exit preserves position")
    print("‚úÖ Both methods use preserved state system")
    print("‚úÖ No hardcoded level1.txt scene creation")
    print("‚úÖ No teleportation to spawn point")
    
    print("\n=== Failure Signs (Should be FIXED now) ===")
    print("‚ùå Player teleports after ESC exit")
    print("‚ùå Different behavior between normal/ESC exit")
    print("‚ùå Position resets to spawn point")
    print("‚ùå Debug shows hardcoded level creation")
    
    print("\n=== Technical Fix Explanation ===")
    print("üîß BEFORE (Broken):")
    print("  ESC ‚Üí Direct Scene_Play creation ‚Üí Position reset")
    print("  Normal ‚Üí Preserved state system ‚Üí Position preserved")
    print("  Result: Inconsistent behavior ‚ùå")
    
    print("\nüîß AFTER (Fixed):")
    print("  ESC ‚Üí Set m_dialogueComplete = true ‚Üí Preserved state system")
    print("  Normal ‚Üí Set m_dialogueComplete = true ‚Üí Preserved state system")
    print("  Result: Consistent behavior ‚úÖ")
    
    print("\n=== Code Changes Made ===")
    print("Changed ESC handler from:")
    print("  m_game->changeScene(\"Play\", std::make_shared<Scene_Play>(...));")
    print("To:")
    print("  m_dialogueComplete = true;")
    print("Now both exit methods use the same completion flow!")
    
    print("\nüéØ This ensures CONSISTENT position preservation regardless of how the dialogue ends!")
    
    print("\n=== Quick Test ===")
    print("1. Move to corner of level")
    print("2. Talk to NPC")
    print("3. Press ESC immediately")
    print("4. Should be back at corner (not spawn point)")
    print("5. If yes: ‚úÖ Fix successful!")
    print("6. If no: ‚ùå Still broken (check debug output)")
